@using MotelBookingApp.Models
@using MotelBookingApp.Data.ViewModels
@model BookedRecordDisplayVM
@{
    ViewData["Title"] = "List of rooms";
}


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container mb-5">
    @if (TempData["staffStatic"] != null)
    {
        <div id="staffStatic" class="flash alert alert-warning">
            @TempData["staffStatic"];
        </div>
    }
    <div>@ViewBag.checkin</div>
    @if (Model != null)
    {
        <div>
            <div style="width:100%; height:8rem; margin-bottom: 1rem; background-image:url('../images/cartBackground.jpg');background-position:center; background-size:cover"></div>
            <h2 class="text-center text-primary">Booked Room List</h2>
            <form method="post">
                <div class="row">
                    <div class="col-lg-3 mb-4">
                        <input type="string" class="form-control" name="username" id="check-in" asp-for="UserName">
                    </div>
                    <div class="col-lg-3 mb-4">
                        <input type="date" class="form-control" name="checkin" id="check-in" asp-for="CheckinDate">
                    </div>
                    <div class="col-lg-3 mb-4">
                        <input type="date" class="form-control" name="checkout" id="check-out" asp-for="CheckoutDate">
                    </div>
                    <div class="col-lg-2 mb-3">
                        <select class="form-select" id="room-type" name="roomType" asp-for="SearchType">
                            <option value=""></option>
                            @foreach (var rt in Model.RoomTypeList)
                            {
                                <option value="@rt.Name">@rt.Name</option>
                            }
                        </select>
                    </div>
                    <div class="col-lg-1 mb-3">
                        <button type="submit" name="button1" value="submit1" class="btn btn-primary" asp-action="Index">Search</button>
                    </div>
                </div>
            </form>

            <table class="table table-bordered align-items-center">
                <thead>
                    <tr>
                        <th>
                            Username
                        </th>
                        <th>
                            Room Number
                        </th>
                        <th>
                            Checkin Date
                        </th>
                        <th>
                            Checkout Date
                        </th>
                        <th>
                            Price
                        </th>
                        <th>
                            Subtotal
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model.BookedRooms != null)
                    {
                        @foreach (BookedRecord br in @Model.BookedRooms)
                        {
                            <tr>
                                <td>
                                    @br.OccupantName
                                </td>
                                <td>
                                    @br.Room.RoomNum
                                </td>
                                <td>
                                    @br.CheckinDate.ToString("yyyy-MM-dd")
                                </td>
                                <td>
                                    @br.CheckoutDate.ToString("yyyy-MM-dd")
                                </td>
                                <td>
                                    $ @br.Room.Price
                                </td>
                                <td>
                                    $@(br.Room.Price * (br.CheckoutDate - br.CheckinDate).Days)
                                </td>
                                @* <td>
                    <form method="post"> <button class="btn btn-outline-danger" type="submit" asp-route-id="@br.Id">Remove</button></form>
                    </td>*@
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        // chart
    }
    <div class="d-flex justify-content-between mt-2">
        <div>
            <canvas id="recordMonthChart"></canvas>
        </div>
        <div>
            <canvas id="recordRoomTypeChart"></canvas>
        </div>
        <div>
            <canvas id="turnoverMonthChart"></canvas>
        </div>
    </div>

    <script>
         setTimeout(function () {
            document.getElementById("staffStatic").style.display = "none";
        }, 3000);

        var ctx = document.getElementById("recordMonthChart").getContext("2d");
        var myChart1 = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Json.Serialize(ViewBag.monthLabels),
                datasets: [{
                    label: @Json.Serialize(ViewBag.monthDatasetLabel),
                    data: @Json.Serialize(ViewBag.monthDatasetData),
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var ctx = document.getElementById("recordRoomTypeChart").getContext("2d");
        var myChart2 = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Json.Serialize(ViewBag.roomTypeLabels),
                datasets: [{
                    label: @Json.Serialize(ViewBag.roomTypeDatasetLabel),
                    data: @Json.Serialize(ViewBag.roomTypeDatasetData),
                    backgroundColor: 'rgb(132, 255, 99)',
                    borderColor: 'rgb(132, 255, 99)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var ctx = document.getElementById("turnoverMonthChart").getContext("2d");
        var myChart3 = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Json.Serialize(ViewBag.turnoverLabels),
                datasets: [{
                    label: @Json.Serialize(ViewBag.turnoverDatasetLabel),
                    data: @Json.Serialize(ViewBag.turnoverDatasetData),
                    backgroundColor: 'rgb(0, 132, 255)',
                    borderColor: 'rgb(0, 132, 255)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>

</div>



