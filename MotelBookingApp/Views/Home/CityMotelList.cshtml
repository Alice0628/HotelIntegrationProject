@using MotelBookingApp.Data.ViewModels
@model List<MotelInputModel>

@{
    ViewData["Title"] = "Motel search result";
}

<div class="container">
    <form method="post">
        <div class="row">
            @if (TempData["searchResOption"] != null)
            {
                <div class="flash alert alert-warning">
                    @TempData["searchResOption"]
                </div>
            }

            <div class="col-lg-3 mb-3">
                @if (string.IsNullOrEmpty(ViewBag.city))
                {
                    <input class="form-control" id="city" name="city" />
                }
                else
                {
                    <input class="form-control" value=@ViewBag.city id="city" name="city" />
                }
            </div>

            <div class="col-lg-3 mb-3">
                @if (string.IsNullOrEmpty(ViewBag.checkin))
                {
                    <input type="date" class="form-control" name="checkin" id="check-in">
                }
                else
                {
                    <input type="date" class="form-control" value=@ViewBag.checkin name="checkin" id="check-in">
                }
            </div>
            <div class="col-lg-3 mb-3">
                @if (string.IsNullOrEmpty(ViewBag.checkout))
                {
                    <input type="date" class="form-control" name="checkout" id="check-out">
                }
                else
                {
                    <input type="date" class="form-control" value=@ViewBag.checkout name="checkout" id="check-out">
                }
            </div>
            <div class="col-lg-2 mb-2">
                @if (string.IsNullOrEmpty(ViewBag.roomType))
                {
                    <select class="form-select" id="room-type" name="roomType">
                        <option value=""></option>
                        @foreach (var rt in ViewBag.RoomTypeList)
                        {
                            <option value=@rt.Name>@rt.Name</option>
                        }
                    </select>
                }
                else
                {
                    <select class="form-select" id="room-type" value=@ViewBag.roomType name="roomType">
                        <option value=""></option>
                        @foreach (var rt in ViewBag.RoomTypeList)
                        {
                            <option value=@rt.Name>@rt.Name</option>
                        }
                    </select>
                }
            </div>
            <div class="col-lg-1 mb-1">
                <button type="submit" name="button1" value="submit1" class="btn btn-primary" asp-action="Index">Search</button>
            </div>
        </div>
    </form>
    <div class="col-10">
        @foreach (var m in Model)
        {
            <div class="d-flex m-1 border justify-content-between align-items-center">
                <div>
                    <img src=@m.ImageUrl width="250" heiht="250" alt="Motel picture" />
                </div>
                <div style="margin-right:1rem">
                    <p>@m.Name</p>
                    <p>@m.Address, @m.City, @m.Province, @m.PostalCode</p>
                    <a class="btn btn-primary" asp-action="CityMotelDetail" asp-route-id="@m.Id">Detail</a>
                </div>

            </div>
        }
    </div>
</div>

<div id="map" style="width: 100%; height: 600px;"></div>

<script>
    //function initMap() {
    //    var map = new google.maps.Map(document.getElementById('map'), {
    //        zoom: 8
    //    });
    //    // todo in controller
    //    var addresses = @Html.Raw(Json.Serialize(@ViewBag.Addresses));
    //    addresses.forEach(function (address) {
    //        IGeocoder geocoder = new GoogleGeocoder() { ApiKey = "AIzaSyCZClJxke6nBFR5PImzPBpjdUZn8FxxhDU" };
    //        geocoder.geocode({ address: addresses }, function (results, status) {
    //            if (status == 'OK') {
    //                var marker = new google.maps.Marker({
    //                    map: map,
    //                    position: results[0].geometry.location,
    //                    title: address
    //                });
    //            } else {
    //                alert('Geocode was not successful for the following reason: ' + status);
    //            }
    //        });
    //    });
    //}

    function initMap() {
        var motelLocations = @Html.Raw(Json.Serialize(ViewBag.motelLocations));
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: @ViewBag.center.Latitude, lng: @ViewBag.center.Longitude },
            zoom: 12
        });
        var markers = [];

         for(var i = 0; i < motelLocations.length; i++) {
            var latitude = parseFloat(motelLocations[i].latitude);
            var longitude = parseFloat(motelLocations[i].longitude);
            markers.push({lat:latitude, lng:longitude});
         }
         
        var address = motelLocations[0].address;
        for(var j = 0; j < markers.length; j++) {    
        var marker = new google.maps.Marker({
            position: markers[j],
            map: map,
            title: address
        });
        }
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBDEkj_2tqmLNrPm43uCX0_PjuWU0inMq4&callback=initMap"
        async defer></script>



