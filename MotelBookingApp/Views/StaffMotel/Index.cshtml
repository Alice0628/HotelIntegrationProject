@using MotelBookingApp.Data.ViewModels
@model MotelDetailModel
@{
    ViewData["Title"] = "My motel";
}

<div class="row">
    <div class="col-md-8 offset-2">
        <h2>RoomType Detail</h2>
        <div class="container">
            <div class="d-flex justify-content-around align-content-center">
                <div>

                    <dl>
                        <dt>Id</dt>
                        <dd>@Model.Motel.Id</dd>
                    </dl>
                    <dl>
                        <dt>Name</dt>
                        <dd>@Model.Motel.Name</dd>
                    </dl>
                    <dl>
                        <dt>Address</dt>
                        <dd>@Model.Motel.Address, @Model.Motel.City, @Model.Motel.Province, @Model.Motel.PostalCode </dd>
                    </dl>

                </div>
                <div>
                    <img width="400" height="250" src=@Model.Motel.ImageUrl />
                    <div class="form-group text-center" style="margin-top: 0.5rem;">
                        <a class="btn btn-primary float-right" asp-control="RoomType" asp-action="Edit"
                           asp-route-id="@Model.Motel.Id">Update</a>
                        <a class="btn btn-secondary" asp-action="Index">Back To List</a>
                    </div>
                </div>
            </div>
            @*<div id="map" style="height: 500px; width: 100%;"></div>
            <script>
            function initMap() {
            const latEle = document.getElementById('lat');
            int latitudedegreePosition =latEle.innerText.IndexOf('°');
            string latitudeStr = latEle.Substring(0, latitudedegreePosition);
            int lat= Convert.ToInt32(latitudeStr);
            const lngEle = document.getElementById('lng');
            int longitudedegreePosition = lngEle.innerText.IndexOf('°');
            string longitudeStr = lngEle.Substring(0, longitudedegreePosition);
            int lng = Convert.ToInt32(longitudeStr);
            var location = { lat: lat, lng: lng };
            var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: location
            });

            var marker = new google.maps.Marker({
            position: location,
            map: map
            });
            }
            </script>
            <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBDEkj_2tqmLNrPm43uCX0_PjuWU0inMq4&callback=initMap"></script>*@


        </div>
        <div>
            @*comments*@
            @if (Model.Comments != null)
            {
                @foreach (var c in Model.Comments)
                {
                    <div class="m-2 border">
                        <div style="position:relative">
                            <div class="d-flex justify-content-between">
                                <p>
                                    @c.User.UserName
                                </p>
                                <div>
                                    <span>
                                        @c.CreateDate
                                    </span>
                                    <span style="margin-left: 1rem; color:blue">
                                        Score: @c.Score
                                    </span>
                                </div>
                            </div>
                            <div style="margin:0 1rem">
                                <p>@c.Content</p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>







